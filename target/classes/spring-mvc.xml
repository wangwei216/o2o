<?xml version="1.0" encoding="UTF-8"?> 
 <beans xmlns="http://www.springframework.org/schema/beans"  
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"  
     xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"  
     xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"  
     xsi:schemaLocation="http://www.springframework.org/schema/beans  
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
       http://www.springframework.org/schema/context  
       http://www.springframework.org/schema/context/spring-context-4.0.xsd  
       http://www.springframework.org/schema/jee  
       http://www.springframework.org/schema/jee/spring-jee-4.0.xsd  
       http://www.springframework.org/schema/mvc  
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd  
       http://www.springframework.org/schema/util   
       http://www.springframework.org/schema/util/spring-util-4.0.xsd">  
         
       <!-- 扫描控制器,当配置了它后,Spring会自动的到com.mjl.controllerm
     下扫描带有@controller @service @component等注解等类,将他们自动实例化 -->
     <context:component-scan base-package="com.imooc.o2o.web" />
     <mvc:annotation-driven /> <!-- 会自动注册DefaultAnnotationHandlerMapping与
     AnnotationMethodHandlerAdapter 两个bean,它解决了一些@controllerz注解使用时的提前配置 -->
    <!--<mvc:resources mapping="/resources/css/**" location="/resources/css/"/>
    <mvc:resources mapping="/resources/js/**" location="/resources/js/"/>-->
    <!-- 避免IE执行AJAX时，返回JSON出现下载文件   -->
    <!--<bean id="mappingJacksonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean> -->

	<!--<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/graduation/*"/>
			<bean class="cn.reatent.interceptors.GraduationInterceptor"></bean>
		</mvc:interceptor>
		
	</mvc:interceptors> -->

    <!-- 静态资源文件，不会被Spring MVC拦截 -->
   <!-- <mvc:resources mapping="/swagger/**" location="/swagger/" />-->
    <!--  配置 页面控制器 -->
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
         <property name="prefix" value="/html/"/>
         <property name="suffix" value=".html" />
 
     </bean>
    <!-- 将 springSwaggerConfig加载到spring容器 -->
   <!-- <bean class="springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration" id="swagger2Config"/>-->
 	
 	<!--  配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包  -->
    <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码  --> 
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值   -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值  --> 
        <property name="maxInMemorySize" value="40960" />  
    </bean>  
 </beans>  
 